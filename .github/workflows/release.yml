permissions:
  contents: write

on:
  push:
    tags:
      - "*"
    branches:
      - preview

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Generate build version
        id: build_version
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/preview" ]]; then
            echo "version=v0.0.0-next-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
            echo "channel=android_github_beta" >> $GITHUB_OUTPUT
            echo "channel_web=web_beta" >> $GITHUB_OUTPUT
            echo "is_prerelease=--prerelease" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "channel=android_github" >> $GITHUB_OUTPUT
            echo "channel_web=web" >> $GITHUB_OUTPUT
            echo "is_prerelease=" >> $GITHUB_OUTPUT
          fi

      - name: 🏗 Decode Keystore
        env:
          BILISOUND_CREDENTIALS: ${{ secrets.BILISOUND_CREDENTIALS }}
          BILISOUND_KEYSTORE_RELEASE: ${{ secrets.BILISOUND_KEYSTORE_RELEASE }}
        run: |
          cd apps/mobile
          echo "$BILISOUND_CREDENTIALS" | base64 --decode > credentials.json
          echo "$BILISOUND_KEYSTORE_RELEASE" | base64 --decode > credentials/bilisound-release.keystore

      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: 🏗 Set build version
        working-directory: apps/mobile
        env:
          EXPO_VERSION: ${{ steps.build_version.outputs.version }}
        run: |
          node ./scripts/change-version.js

      - name: 📦 Install dependencies
        run: |
          pnpm install
          cd apps/mobile
          pnpm run prebuild

      - name: 🏗 Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: 🏗 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🚀 Build Android app
        working-directory: apps/mobile
        env:
          APP_ENV: production
          EXPO_PUBLIC_API_URL: https://api.bilisound.com/api
          EXPO_PUBLIC_RELEASE_CHANNEL: ${{ steps.build_version.outputs.channel }}
        run: pnpm run build:android

      - name: 🚀 Build Web app
        working-directory: apps/mobile
        env:
          APP_ENV: production
          EXPO_PUBLIC_API_URL: https://api.bilisound.com/api
          EXPO_PUBLIC_RELEASE_CHANNEL: ${{ steps.build_version.outputs.channel_web }}
        run: pnpm run build:web

      - name: 🚀 Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/mobile/dist --project-name=client-mobile --branch=${{ github.ref == 'refs/heads/preview' && 'preview' || 'main' }} --commit-dirty=true

      - name: 📝 Extract Release Notes
        id: extract_release_notes
        uses: ffurrer2/extract-release-notes@v2
        with:
          changelog_file: apps/mobile/CHANGELOG.md
          prerelease: ${{ github.ref == 'refs/heads/preview' }}

      - name: 🚀 Create Release
        working-directory: apps/mobile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.build_version.outputs.version }} \
            --title "Release ${{ steps.build_version.outputs.version }}" \
            --notes "${{ steps.extract_release_notes.outputs.release_notes }}" \
            ${{ steps.build_version.outputs.is_prerelease }} \
            ./android/app/build/outputs/apk/release/app-release.apk#bilisound-${{ steps.build_version.outputs.version }}.apk
